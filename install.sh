#!/bin/bash

# Telegram Approval System - –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "${BLUE}================================${NC}"
    echo -e "${BLUE}  Telegram Approval System${NC}"
    echo -e "${BLUE}  –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞${NC}"
    echo -e "${BLUE}================================${NC}"
    echo
}

print_step() {
    echo -e "${YELLOW}[–®–ê–ì $1]${NC} $2"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    print_step "1" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
    if ! command -v node &> /dev/null; then
        print_error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
        exit 1
    fi
    
    NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$NODE_VERSION" -lt 18 ]; then
        print_error "–¢—Ä–µ–±—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏–∏ 18 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $(node --version)"
        exit 1
    fi
    print_success "Node.js $(node --version) - OK"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
    if ! command -v npm &> /dev/null; then
        print_error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    print_success "npm $(npm --version) - OK"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ git
    if ! command -v git &> /dev/null; then
        print_error "git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    print_success "git $(git --version | cut -d' ' -f3) - OK"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ curl
    if ! command -v curl &> /dev/null; then
        print_error "curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    print_success "curl - OK"
    
    echo
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
create_project_structure() {
    print_step "2" "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p src/backend/logs
    mkdir -p src/backend/config
    mkdir -p tests/reports
    mkdir -p docs/user-guide
    mkdir -p scripts
    
    print_success "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞"
    echo
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ backend
setup_backend() {
    print_step "3" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ backend-—Å–µ—Ä–≤–∏—Å–∞..."
    
    if [ -f "scripts/setup-backend.sh" ]; then
        ./scripts/setup-backend.sh
    else
        print_error "–°–∫—Ä–∏–ø—Ç setup-backend.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    echo
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Bot
setup_telegram() {
    print_step "4" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Bot..."
    
    if [ -f "scripts/setup-telegram.sh" ]; then
        ./scripts/setup-telegram.sh
    else
        print_error "–°–∫—Ä–∏–ø—Ç setup-telegram.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    echo
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Bitrix24
setup_bitrix24() {
    print_step "5" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Bitrix24..."
    
    if [ -f "scripts/setup-bitrix24.sh" ]; then
        ./scripts/setup-bitrix24.sh
    else
        print_error "–°–∫—Ä–∏–ø—Ç setup-bitrix24.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    echo
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π
generate_secrets() {
    print_step "6" "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π..."
    
    if [ -f "scripts/generate-secrets.sh" ]; then
        ./scripts/generate-secrets.sh
    else
        print_error "–°–∫—Ä–∏–ø—Ç generate-secrets.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    echo
}

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
start_system() {
    print_step "7" "–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã..."
    
    if [ -f "scripts/start-system.sh" ]; then
        ./scripts/start-system.sh
    else
        print_error "–°–∫—Ä–∏–ø—Ç start-system.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    echo
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook
setup_webhook() {
    print_step "8" "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook..."
    
    if [ -f "scripts/setup-webhook.sh" ]; then
        ./scripts/setup-webhook.sh
    else
        print_error "–°–∫—Ä–∏–ø—Ç setup-webhook.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    echo
}

# –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
final_setup() {
    print_step "9" "–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞..."
    
    print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í–æ—Ç —á—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
    echo
    echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    echo "‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞"
    echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω backend-—Å–µ—Ä–≤–∏—Å"
    echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω Telegram Bot"
    echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω Bitrix24"
    echo "‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏"
    echo "‚úÖ –ó–∞–ø—É—â–µ–Ω backend-—Å–µ—Ä–≤–∏—Å"
    echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω webhook"
    echo
    
    print_info "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  ./scripts/status.sh    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
    echo "  ./scripts/stop.sh      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É"
    echo "  ./scripts/restart.sh   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É"
    echo
    
    print_info "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Activity –≤ Bitrix24 (—Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–∞–ø–∫—É src/activity/telegram_approval)"
    echo "2. –°–æ–∑–¥–∞–π—Ç–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å —Å Activity 'Telegram Approval'"
    echo "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∏—Å—Ç–µ–º—É"
    echo
    
    print_success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_header
    
    check_dependencies
    create_project_structure
    setup_backend
    setup_telegram
    setup_bitrix24
    generate_secrets
    start_system
    setup_webhook
    final_setup
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
